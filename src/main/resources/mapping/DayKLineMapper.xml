<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quantour.ssm.dao.DayKLineMapper">
  <resultMap id="BaseResultMap" type="com.quantour.ssm.model.DayKLine">
    <id column="stock_code" jdbcType="VARCHAR" property="stockCode" />
    <id column="stock_date" jdbcType="DATE" property="stockDate" />
    <result column="volume" jdbcType="DOUBLE" property="volume" />
    <result column="open_price" jdbcType="DOUBLE" property="openPrice" />
    <result column="close_price" jdbcType="DOUBLE" property="closePrice" />
    <result column="high_price" jdbcType="DOUBLE" property="highPrice" />
    <result column="low_price" jdbcType="DOUBLE" property="lowPrice" />
  </resultMap>

  <resultMap id="StockBasicInfoMap" type="com.quantour.ssm.model.StockBasicInfo">
    <id column="stock_code" jdbcType="VARCHAR" property="code"/>
    <result column="stock_name" jdbcType="VARCHAR" property="name"/>
    <result column="stock_industry" jdbcType="VARCHAR" property="industry"/>
    <result column="stock_area" jdbcType="VARCHAR" property="area"/>
  </resultMap>


  <sql id="Base_Column_List">
    stock_code, stock_date, volume, open_price, close_price, high_price, low_price
  </sql>

  <select id="getAllDateByCode" parameterType="java.lang.String" resultType="java.lang.String">
    select stock_date
    from day_stock
    where stock_code = #{code,jdbcType=VARCHAR}
  </select>

  <select id="getOneDayKLine" parameterType="com.quantour.ssm.model.DayKLineKey" resultMap="BaseResultMap">
    select *
    from day_stock
    where stock_code = #{stockCode,jdbcType=VARCHAR}
     and  stock_date = #{stockDate,jdbcType=DATE}
  </select>

  <select id="getTimesDayKLines" resultMap="BaseResultMap">
    select *
    from day_stock
    where stock_code = #{code} and
          stock_date between #{start} and #{end}
  </select>

  <select id="getOneDayDayKLines" parameterType="java.sql.Date" resultMap="BaseResultMap">
    select *
    from day_stock
    where stock_date = #{date,jdbcType=DATE}
  </select>

  <select id="getYesterdayDayKLine" parameterType="com.quantour.ssm.model.DayKLineKey" resultMap="BaseResultMap">
    select *
    from day_stock as T1
    where T1.stock_code = #{stockCode,jdbcType=VARCHAR}
      and T1.stock_date = (select max(stock_date) from day_stock as T2
                                              where T2.stock_date &lt; #{stockDate,jdbcType=DATE})
  </select>

  <select id="getYesterdayDayKLines" parameterType="java.sql.Date" resultMap="BaseResultMap">
    select *
    from day_stock as T1
    where T1.stock_date = (select max(stock_date) from day_stock as T2
                                               where T2.stock_date &lt; #{date,jdbcType=DATE})
  </select>

  <select id="getAllDayKLinesByCode" parameterType="java.lang.String" resultMap="BaseResultMap">
    select *
    from day_stock
    where stock_code = #{code}
  </select>

  <select id="getAllStockInfos" resultMap="StockBasicInfoMap">
    select *
    from code_basic_info
  </select>

  <select id="getOneBlockInfo" parameterType="com.quantour.ssm.model.DayKLineKey" resultMap="BaseResultMap">
    select *
    from day_block
    where stock_code = #{stockCode}
      and stock_date = #{stockDate}
  </select>

  <select id="getOneStockInfo" parameterType="java.lang.String" resultMap="StockBasicInfoMap">
    select *
    from code_basic_info
    where stock_code = #{code}
  </select>

  <select id="getTimesBlockInfo" resultMap="BaseResultMap">
    select *
    from day_block
    where stock_code = #{block} and
          stock_date between #{start} and #{end}
  </select>

  <select id="getConceptBlockStockCodes" parameterType="java.lang.String" resultType="java.lang.String">
    select stock_code
    from concept_block
    where concept = #{blockName,jdbcType=VARCHAR}
  </select>

  <select id="getIndustryBlockStockCodes" parameterType="java.lang.String" resultType="java.lang.String">
    select stock_code
    from industry_block
    where industry = #{blockName,jdbcType=VARCHAR}
  </select>

  <select id="getAreaBlockStockCodes" parameterType="java.lang.String" resultType="java.lang.String">
    select stock_code
    from area_block
    where area = #{blockName,jdbcType=VARCHAR}
  </select>

  <select id="getAllConceptBlock" resultType="java.lang.String">
    select distinct concept
    from concept_block
  </select>

  <select id="getAllIndustryBlock" resultType="java.lang.String">
    select distinct industry
    from industry_block
  </select>

  <select id="getAllAreaBlock" resultType="java.lang.String">
    select distinct area
    from area_block
  </select>

  <select id="getMarketDates" resultType="java.sql.Date">
    select distinct stock_date
    from day_stock
    order by stock_date asc
  </select>

  <select id="getBlockAllDate" parameterType="java.lang.String" resultType="java.sql.Date">
    select distinct stock_date
    from day_block
    where stock_code = #{block}
    order by stock_date asc
  </select>

  <select id="getAllCodeBySmeBlock" resultType="java.lang.String">
    select stock_code
    from sme_block
  </select>

  <select id="getAllCodeByGemBlock" resultType="java.lang.String">
    select stock_code
    from gem_block
  </select>

  <select id="getAllCodeByHs300Block" resultType="java.lang.String">
    select stock_code
    from hs300_block
  </select>

  <select id="getAllCodeBySz50Block" resultType="java.lang.String">
    select stock_code
    from sz50_block
  </select>

  <select id="getAllCodeByZz500Block" resultType="java.lang.String">
    select stock_code
    from zz500_block
  </select>

  <select id="getIndustryByStock" parameterType="java.lang.String" resultType="java.lang.String">
    select industry
    from industry_block
    where stock_code = #{code}
  </select>

  <select id="getAreaByStock" parameterType="java.lang.String" resultType="java.lang.String">
    select area
    from area_block
    where stock_code = #{code}
  </select>

  <select id="getConceptByStock" parameterType="java.lang.String" resultType="java.lang.String">
    select concept
    from concept_block
    where stock_code = #{code}
  </select>

  <select id="selectByPrimaryKey" parameterType="com.quantour.ssm.model.DayKLineKey" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from day_stock
    where stock_code = #{stockCode,jdbcType=VARCHAR}
      and stock_date = #{stockDate,jdbcType=DATE}
  </select>


  <delete id="deleteByPrimaryKey" parameterType="com.quantour.ssm.model.DayKLineKey">
    delete from day_stock
    where stock_code = #{stockCode,jdbcType=VARCHAR}
      and stock_date = #{stockDate,jdbcType=DATE}
  </delete>
  <insert id="insert" parameterType="com.quantour.ssm.model.DayKLine">
    insert into day_stock (stock_code, stock_date, volume, 
      open_price, close_price, high_price, 
      low_price)
    values (#{stockCode,jdbcType=VARCHAR}, #{stockDate,jdbcType=DATE}, #{volume,jdbcType=DOUBLE}, 
      #{openPrice,jdbcType=DOUBLE}, #{closePrice,jdbcType=DOUBLE}, #{highPrice,jdbcType=DOUBLE}, 
      #{lowPrice,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.quantour.ssm.model.DayKLine">
    insert into day_stock
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="stockCode != null">
        stock_code,
      </if>
      <if test="stockDate != null">
        stock_date,
      </if>
      <if test="volume != null">
        volume,
      </if>
      <if test="openPrice != null">
        open_price,
      </if>
      <if test="closePrice != null">
        close_price,
      </if>
      <if test="highPrice != null">
        high_price,
      </if>
      <if test="lowPrice != null">
        low_price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="stockCode != null">
        #{stockCode,jdbcType=VARCHAR},
      </if>
      <if test="stockDate != null">
        #{stockDate,jdbcType=DATE},
      </if>
      <if test="volume != null">
        #{volume,jdbcType=DOUBLE},
      </if>
      <if test="openPrice != null">
        #{openPrice,jdbcType=DOUBLE},
      </if>
      <if test="closePrice != null">
        #{closePrice,jdbcType=DOUBLE},
      </if>
      <if test="highPrice != null">
        #{highPrice,jdbcType=DOUBLE},
      </if>
      <if test="lowPrice != null">
        #{lowPrice,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.quantour.ssm.model.DayKLine">
    update day_stock
    <set>
      <if test="volume != null">
        volume = #{volume,jdbcType=DOUBLE},
      </if>
      <if test="openPrice != null">
        open_price = #{openPrice,jdbcType=DOUBLE},
      </if>
      <if test="closePrice != null">
        close_price = #{closePrice,jdbcType=DOUBLE},
      </if>
      <if test="highPrice != null">
        high_price = #{highPrice,jdbcType=DOUBLE},
      </if>
      <if test="lowPrice != null">
        low_price = #{lowPrice,jdbcType=DOUBLE},
      </if>
    </set>
    where stock_code = #{stockCode,jdbcType=VARCHAR}
      and stock_date = #{stockDate,jdbcType=DATE}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.quantour.ssm.model.DayKLine">
    update day_stock
    set volume = #{volume,jdbcType=DOUBLE},
      open_price = #{openPrice,jdbcType=DOUBLE},
      close_price = #{closePrice,jdbcType=DOUBLE},
      high_price = #{highPrice,jdbcType=DOUBLE},
      low_price = #{lowPrice,jdbcType=DOUBLE}
    where stock_code = #{stockCode,jdbcType=VARCHAR}
      and stock_date = #{stockDate,jdbcType=DATE}
  </update>
</mapper>