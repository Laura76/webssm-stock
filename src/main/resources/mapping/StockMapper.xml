<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quantour.ssm.dao.StockMapper">
  <resultMap id="BaseResultMap" type="com.quantour.ssm.model.Stock">
    <id column="stock_code" jdbcType="VARCHAR" property="stockCode" />
    <id column="stock_date" jdbcType="DATE" property="stockDate" />
    <result column="stock_serial" jdbcType="VARCHAR" property="stockSerial" />
    <result column="open_price" jdbcType="DOUBLE" property="openPrice" />
    <result column="high_price" jdbcType="DOUBLE" property="highPrice" />
    <result column="low_price" jdbcType="DOUBLE" property="lowPrice" />
    <result column="close_price" jdbcType="DOUBLE" property="closePrice" />
    <result column="volume" jdbcType="VARCHAR" property="volume" />
    <result column="adj_close" jdbcType="DOUBLE" property="adjClose" />
    <result column="stock_name" jdbcType="VARCHAR" property="stockName" />
    <result column="market" jdbcType="VARCHAR" property="market" />
  </resultMap>



  <sql id="Base_Column_List">
    stock_code, stock_date, stock_serial, open_price, high_price, low_price, close_price, 
    volume, adj_close, stock_name, market
  </sql>


  <select id="getAllDateByCode" parameterType="java.lang.String" resultType="String">
    select stock_date
    from stock
    where stock_code = #{code,jdbcType=VARCHAR}
  </select>

  <select id="getOneStock" parameterType="com.quantour.ssm.model.StockKey" resultMap="BaseResultMap">
    select
    *
    from stock
    where stock_code = #{stockCode,jdbcType=VARCHAR}
      and stock_date = #{stockDate,jdbcType=DATE}
  </select>

  <select id="getTimesStocks" resultMap="BaseResultMap">
    select *
    from stock
    where stock_code = #{code} and
          stock_date between #{start} and #{end}
  </select>

  <select id="getOneDayStocks" parameterType="java.sql.Date" resultMap="BaseResultMap">
    select *
    from stock
    where stock_date = #{date,jdbcType=DATE}
  </select>

  <select id="getYesterdayStock" parameterType="com.quantour.ssm.model.StockKey" resultMap="BaseResultMap">
    select *
    from stock
    where stock_date = (select date_sub(#{stockDate,jdbcType=DATE},interval 1 day))
      and stock_code = #{stockCode,jdbcType=VARCHAR}
  </select>


  <select id="selectByPrimaryKey" parameterType="com.quantour.ssm.model.StockKey" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from stock
    where stock_code = #{stockCode,jdbcType=VARCHAR}
    and stock_date = #{stockDate,jdbcType=DATE}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.quantour.ssm.model.StockKey">
    delete from stock
    where stock_code = #{stockCode,jdbcType=VARCHAR}
      and stock_date = #{stockDate,jdbcType=DATE}
  </delete>
  <insert id="insert" parameterType="com.quantour.ssm.model.Stock">
    insert into stock (stock_code, stock_date, stock_serial, 
      open_price, high_price, low_price, 
      close_price, volume, adj_close, 
      stock_name, market)
    values (#{stockCode,jdbcType=VARCHAR}, #{stockDate,jdbcType=DATE}, #{stockSerial,jdbcType=VARCHAR},
      #{openPrice,jdbcType=DOUBLE}, #{highPrice,jdbcType=DOUBLE}, #{lowPrice,jdbcType=DOUBLE}, 
      #{closePrice,jdbcType=DOUBLE}, #{volume,jdbcType=VARCHAR}, #{adjClose,jdbcType=DOUBLE}, 
      #{stockName,jdbcType=VARCHAR}, #{market,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.quantour.ssm.model.Stock">
    insert into stock
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="stockCode != null">
        stock_code,
      </if>
      <if test="stockDate != null">
        stock_date,
      </if>
      <if test="stockSerial != null">
        stock_serial,
      </if>
      <if test="openPrice != null">
        open_price,
      </if>
      <if test="highPrice != null">
        high_price,
      </if>
      <if test="lowPrice != null">
        low_price,
      </if>
      <if test="closePrice != null">
        close_price,
      </if>
      <if test="volume != null">
        volume,
      </if>
      <if test="adjClose != null">
        adj_close,
      </if>
      <if test="stockName != null">
        stock_name,
      </if>
      <if test="market != null">
        market,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="stockCode != null">
        #{stockCode,jdbcType=VARCHAR},
      </if>
      <if test="stockDate != null">
        #{stockDate,jdbcType=DATE},
      </if>
      <if test="stockSerial != null">
        #{stockSerial,jdbcType=VARCHAR},
      </if>
      <if test="openPrice != null">
        #{openPrice,jdbcType=DOUBLE},
      </if>
      <if test="highPrice != null">
        #{highPrice,jdbcType=DOUBLE},
      </if>
      <if test="lowPrice != null">
        #{lowPrice,jdbcType=DOUBLE},
      </if>
      <if test="closePrice != null">
        #{closePrice,jdbcType=DOUBLE},
      </if>
      <if test="volume != null">
        #{volume,jdbcType=VARCHAR},
      </if>
      <if test="adjClose != null">
        #{adjClose,jdbcType=DOUBLE},
      </if>
      <if test="stockName != null">
        #{stockName,jdbcType=VARCHAR},
      </if>
      <if test="market != null">
        #{market,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.quantour.ssm.model.Stock">
    update stock
    <set>
      <if test="stockSerial != null">
        stock_serial = #{stockSerial,jdbcType=VARCHAR},
      </if>
      <if test="openPrice != null">
        open_price = #{openPrice,jdbcType=DOUBLE},
      </if>
      <if test="highPrice != null">
        high_price = #{highPrice,jdbcType=DOUBLE},
      </if>
      <if test="lowPrice != null">
        low_price = #{lowPrice,jdbcType=DOUBLE},
      </if>
      <if test="closePrice != null">
        close_price = #{closePrice,jdbcType=DOUBLE},
      </if>
      <if test="volume != null">
        volume = #{volume,jdbcType=VARCHAR},
      </if>
      <if test="adjClose != null">
        adj_close = #{adjClose,jdbcType=DOUBLE},
      </if>
      <if test="stockName != null">
        stock_name = #{stockName,jdbcType=VARCHAR},
      </if>
      <if test="market != null">
        market = #{market,jdbcType=VARCHAR},
      </if>
    </set>
    where stock_code = #{stockCode,jdbcType=VARCHAR}
      and stock_date = #{stockDate,jdbcType=DATE}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.quantour.ssm.model.Stock">
    update stock
    set stock_serial = #{stockSerial,jdbcType=VARCHAR},
      open_price = #{openPrice,jdbcType=DOUBLE},
      high_price = #{highPrice,jdbcType=DOUBLE},
      low_price = #{lowPrice,jdbcType=DOUBLE},
      close_price = #{closePrice,jdbcType=DOUBLE},
      volume = #{volume,jdbcType=VARCHAR},
      adj_close = #{adjClose,jdbcType=DOUBLE},
      stock_name = #{stockName,jdbcType=VARCHAR},
      market = #{market,jdbcType=VARCHAR}
    where stock_code = #{stockCode,jdbcType=VARCHAR}
      and stock_date = #{stockDate,jdbcType=DATE}
  </update>
</mapper>